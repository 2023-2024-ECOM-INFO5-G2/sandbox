version: '3.7'
services:
  app:
    image: ${DOCKER_USER}/${APP_IMAGE}:${APP_TAG}
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - JHIPSTER_SLEEP= ${JHIPSTER_SLEEP}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jhipster-monolith-app.rule=Host(`${APP_URL}`)'
      - 'traefik.http.routers.jhipster-monolith-app.entrypoints=${TRAEFIK_APP_ENTRYPOINT}'
    networks:
      - traefik-network
    deploy:
      replicas: ${APP_REPLICAS}

  database:
    container_name: database-${APP_ENVIRONMENT}
    image: ${DATABASE_IMAGE}:${DATABASE_TAG}
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - database-volume:/var/lib/postgresql/data
    networks:
      - traefik-network
    healthcheck:
      test: ['CMD-SHELL', '${DATABASE_HEALTHCHECK}']
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  traefik-network:
    name: ${TRAEFIK_NETWORK}
    external: true

volumes:
  database-volume:
    name: ${DATABASE_VOLUME}
